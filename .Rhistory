title(sub = "Note: Dashed lines indicate simulated average when m=100,000",
cex.sub = 0.75, adj = 0)
?order
sum(replicate(m,sum(sample(1:12)[1:6])==21))/m
m<-100000
sum(replicate(m,sum(sample(1:12)[1:6])==21))/m
m<-100000
simu5<-sum(replicate(m,sum(sample(1:12)[1:6])==21))/m
est5<-mean(simu5)
av.conv5 <- rep(NA,m)
for(i in 1:m){av.conv5[i] <- mean(simu5[1:i])}
load("D:/GoogleDrive/Lectures/2015_09to12_UCD/POL211 Research Method/HW Papers/HW2/HW2_renv_151014.RData")
m<-100000
simu5<-sum(replicate(m,sum(sample(1:12)[1:6])==21))/m
est5<-mean(simu5)
av.conv5 <- rep(NA,m)
for(i in 1:m){av.conv5[i] <- mean(simu5[1:i])}
m<-100000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21))
est5<-mean(simu5)
av.conv5 <- rep(NA,m)
for(i in 1:m){av.conv5[i] <- mean(simu5[1:i])}
m<-100000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
av.conv5 <- rep(NA,m)
for(i in 1:m){av.conv5[i] <- mean(simu5[1:i])}
options(scipen=100000)
temppar<-par(mfrow=c(1,1),mar=c(6,5,2,2)) # c(bottom, left, top, right)
plot(av.conv3,pch=19,cex=0.5, xlab="simulation runs", ylab="Estimated Prob. of Success")
abline(h=est3,lty="dashed",lwd=2, col="black") # Simulated average for simulation in prob.3
points(av.conv5,pch=19,cex=0.5,col="red")
abline(h=est5,lty="dashed",lwd=2, col="red") # Simulated average for simulation in prob.4
m<-100000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
av.conv5 <- rep(NA,m)
for(i in 1:m){av.conv5[i] <- mean(simu5[1:i])}
options(scipen=100000)
temppar<-par(mfrow=c(1,1),mar=c(6,5,2,2)) # c(bottom, left, top, right)
plot(av.conv3,pch=19,cex=0.5, xlab="simulation runs", ylab="Estimated Prob. of Success")
abline(h=est3,lty="dashed",lwd=2, col="black") # Simulated average for simulation in prob.3
points(av.conv5,pch=19,cex=0.5,col="red")
abline(h=est5,lty="dashed",lwd=2, col="red") # Simulated average for simulation in prob.4
m<-100000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
av.conv5 <- rep(NA,m)
for(i in 1:m){av.conv5[i] <- mean(simu5[1:i])}
options(scipen=100000)
temppar<-par(mfrow=c(1,1),mar=c(6,5,2,2)) # c(bottom, left, top, right)
plot(av.conv3,pch=19,cex=0.5, xlab="simulation runs", ylab="Estimated Prob. of Success")
abline(h=est3,lty="dashed",lwd=2, col="black") # Simulated average for simulation in prob.3
points(av.conv5,pch=19,cex=0.5,col="red")
abline(h=est5,lty="dashed",lwd=2, col="red") # Simulated average for simulation in prob.4
m<-200000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
est5
m<-200000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
est5
m<-200000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
est5
m<-200000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
est5
m<-200000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
est5
m<-200000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
est5
m<-200000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
est5
m<-200000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
est5
m<-200000
simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
est5<-mean(simu5)
est5
m<-100000
s<-100
simu5<-matrix(replicate(m*s,sum(sample(1:12)[1:6])==21),nrow=m,ncol=s)
m<-100000
s<-100
#simu5<-replicate(m,sum(sample(1:12)[1:6])==21)
#av.conv5 <- rep(NA,m)
#for(i in 1:m){av.conv5[i] <- mean(simu5[1:i])}
simu5<-replicate(s,mean(replicate(m,sum(sample(1:12)[1:6])==21)))
est5<-mean(simu5)
temppar<-par(mfrow=c(1,1),mar=c(6,5,2,2)) # c(bottom, left, top, right)
plot(c(1:s),simu5,pch=19,cex=0.5, xlab="meta-simulation number", ylab="Estimated Prob. of Success")
abline(h=est5,lty="dashed",lwd=2, col="black") # Simulated average for simulation in prob.3
est5
m<-100000
s<-100
simu6<-replicate(s,mean(replicate(m,all(order(tapply(sample(366),month,function(k)mean(k)))[1:6]<7))))
est6<-mean(simu6)
est6
temppar<-par(mfrow=c(1,1),mar=c(6,5,2,2)) # c(bottom, left, top, right)
plot(c(1:s),simu6,pch=19,cex=0.5, xlab="meta-simulation number", ylab="Estimated Prob. of Success")
abline(h=est6,lty="dashed",lwd=2, col="black") # Simulated average for simulation in prob.3
(factorial(6)*choose(12,6)*choose(12,6)*factorial(6))/factorial(12)
(factorial(6)*choose(12,6)*choose(12,6)*factorial(6))
(factorial(6)*choose(12,6)*factorial(6))/factorial(12)
(factorial(6)*factorial(6))/factorial(12)
temppar<-par(mfrow=c(1,1),mar=c(6,5,2,2)) # c(bottom, left, top, right)
plot(c(1:s),simu5,pch=19,cex=0.5, xlab="meta-simulation number", ylab="Estimated Prob. of Success")
abline(h=est5,lty="dashed",lwd=2, col="black") # Simulated average for simulation in prob.3
points(simu6,pch=19,cex=0.5,col="red")
abline(h=est6,lty="dashed",lwd=2, col="red") # Simulated average for simulation in prob.4
save.image("D:/GoogleDrive/Lectures/2015_09to12_UCD/POL211 Research Method/HW Papers/HW2/HW2_renv_151014.RData")
est.theox <- (factorial(6)*factorial(6))/factorial(12)
abline(h=est.theox,lwd=2, col="black") # Simulated average for simulation in prob.4
temppar<-par(mfrow=c(1,1),mar=c(6,5,2,2)) # c(bottom, left, top, right)
plot(c(1:s),simu5,pch=19,cex=0.7, xlab="meta-simulation number", ylab="Estimated Prob. of Success")
abline(h=est5,lty="dashed",lwd=2, col="black") # Simulated average for simulation in prob.3
points(simu6,pch=19,cex=0.7,col="red")
abline(h=est6,lty="dashed",lwd=2, col="red") # Simulated average for simulation in prob.4
est.theox <- (factorial(6)*factorial(6))/factorial(12)
abline(h=est.theox,lwd=2, col="black") # Simulated average for simulation in prob.4
temppar<-par(mfrow=c(1,1),mar=c(6,5,2,2)) # c(bottom, left, top, right)
plot(c(1:s),simu5,pch=19,cex=1, xlab="meta-simulation number", ylab="Estimated Prob. of Success")
abline(h=est5,lty="dashed",lwd=2, col="black") # Simulated average for simulation in prob.3
points(simu6,pch=17,cex=1,col="red")
abline(h=est6,lty="dashed",lwd=2, col="red") # Simulated average for simulation in prob.4
abline(h=est6,lty="dotdashed",lwd=2, col="red") # Simulated average for simulation in prob.4
abline(h=est6,lty="dotdash,lwd=2, col="red") # Simulated average for simulation in prob.4
est.theox <- (factorial(6)*factorial(6))/factorial(12)
temppar<-par(mfrow=c(1,1),mar=c(6,5,2,2)) # c(bottom, left, top, right)
plot(c(1:s),simu5,pch=19,cex=1, xlab="meta-simulation number", ylab="Estimated Prob. of Success")
abline(h=est5,lty="dashed",lwd=2, col="black") # Simulated average for simulation in prob.3
points(simu6,pch=17,cex=1,col="red")
abline(h=est6,lty="dotdash",lwd=2, col="red") # Simulated average for simulation in prob.4
est.theox <- (factorial(6)*factorial(6))/factorial(12)
abline(h=est.theox,lwd=2, col="black") # Simulated average for simulation in prob.4
legend('bottomright','group',c("Grace's Method","Simulation in Problem 4"),
pch=c(19,18),col=c("black","red"),lwd=1,lty=c("dashed","dotdash"),ncol=1,bty="n")
title(sub = "Note: Line indicates theoretical expected probability of 0.001082251",
cex.sub = 1, adj = 0)
temppar<-par(mfrow=c(1,1),mar=c(6,5,2,2)) # c(bottom, left, top, right)
plot(c(1:s),simu5,pch=19,cex=1, xlab="meta-simulation number", ylab="Estimated Prob. of Success")
abline(h=est5,lty="dashed",lwd=2, col="black") # Simulated average for simulation in prob.3
points(simu6,pch=17,cex=1,col="red")
abline(h=est6,lty="dotdash",lwd=2, col="red") # Simulated average for simulation in prob.4
est.theox <- (factorial(6)*factorial(6))/factorial(12)
abline(h=est.theox,lwd=2, col="black") # Simulated average for simulation in prob.4
legend('bottomright','group',c("Grace's Method","My Method in Problem 4"),
pch=c(19,17),col=c("black","red"),lwd=1,lty=c("dashed","dotdash"),ncol=1,bty="n")
title(sub = "Note: Line indicates theoretical expected probability of 0.001082251",
cex.sub = 1, adj = 0)
1/6+(5/6)*(1/6)
(5/6)*(1/6)
rm(list=ls())
load("C:/Dropbox/Waseda/Research/13new_ca/分類Analysis//Final Analysis/NPcode_150610.RData")
##################Prepare Packages##################
library(vars)#;detach("package:vars", unload=TRUE)
library(tseries);library(urca);
library(tsDyn)#;detach("package:tsDyn", unload=TRUE)
#library(MSBVAR);detach("package:MSBVAR", unload=TRUE)
uslike.vecmE<-ca.jo(us_like_wdata,type="eigen",ecdet="none",K=4,spec="transitory",
season=NULL,dumvar=NULL);summary(uslike.vecmE)
summary(uslike.VECM)
uslike.VECM
ls(uslike.VECM)
?VECM
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,include ="const",beta=NULL,estim ="2OLS",exogen=NULL)
summary(uslike.VECM)
ls(uslike.VECM)
?lineVar
toLatex(uslike.VECM)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="2OLS",
LRinclude="both",
exogen=NULL)
summary(uslike.VECM)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="2OLS",
LRinclude=c("both",us_usnegper_ldl),
exogen=NULL)
summary(uslike.VECM)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="2OLS",
LRinclude=c("both",us_like_wdata$us_usnegper_ldl),
exogen=NULL)
summary(uslike.VECM)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="ML",
LRinclude=c("both",us_like_wdata$us_usnegper_ldl),
exogen=NULL)
summary(uslike.VECM)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="ML",
LRinclude=c("const",us_like_wdata$us_usnegper_ldl),
exogen=NULL)
summary(uslike.VECM)
ls(uslike.VECM)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="ML",
LRinclude=c(us_like_wdata$us_usnegper_ldl),
exogen=NULL)
ls(uslike.VECM)
summary(uslike.VECM)
uslike.VECM$exogen
uslike.VECM$lag
uslike.VECM$model.x
list(uslike.VECM)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="ML",
LRinclude=c(us_uswnegper_ldl),
exogen=NULL)
list(uslike.VECM)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="ML",
LRinclude=c(uswnegper_ldl),
exogen=NULL)
list(uslike.VECM)
ls(us_like_wdata)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="ML",
LRinclude=c(us_like_wdata$uswnegper_ldl),
exogen=NULL)
list(uslike.VECM)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="ML",
LRinclude=us_like_wdata$uswnegper_ldl,
exogen=NULL)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="ML",
LRinclude=us_like_wdata,
exogen=NULL)
list(uslike.VECM)
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,
include ="const",
beta=NULL,estim ="ML",
LRinclude=c(us_like_wdata),
exogen=NULL)
toLatex(summary(uslike.VECM))
uslike.VECM<-VECM(us_like_wdata,lag=3,r=3,include ="const",beta=NULL,estim ="ML",exogen=NULL)
summary(uslike.VECM)
p<-5/9
36*p^2-40*p+20
p<-4/9
36*p^2-40*p+20
p<-6/9
36*p^2-40*p+20
p<-5/9
36*p^2-40*p+20
40*0.6
2^(1/2)
2^(-1/2)
n<-2
ci<-(n^2)/4
u<-sqrt(ci)-(1/n)*(ci*n); u
n<-3
ci<-(n^2)/4
u<-sqrt(ci)-(1/n)*(ci*n); u
n<-4
ci<-(n^2)/4
u<-sqrt(ci)-(1/n)*(ci*n); u
n<-5
ci<-(n^2)/4
u<-sqrt(ci)-(1/n)*(ci*n); u
n<-6
ci<-(n^2)/4
u<-sqrt(ci)-(1/n)*(ci*n); u
n<-6
ci<-(n^2)/4
ci<-2
u<-sqrt(ci)-(1/n)*(ci*n); u
n<-6
ci<-(n^2)/4
ci<-6
u<-sqrt(ci)-(1/n)*(ci*n); u
n<-6
ci<-(n^2)/4
ci<-seq(1:5)
u<-sqrt(ci)-(1/n)*(ci*n); u
n<-2
ci<-(n^2)/4
ci<-seq(1:5)
u<-sqrt(ci)-(1/n)*(ci*n); u
n<-2
#ci<-seq(1:5)
ci<-(n^2)/4
u<-sqrt(ci)-(1/n)*(ci*n); u
n<-4
#ci<-seq(1:5)
ci<-(n^2)/4
u<-sqrt(ci)-(1/n)*(ci*n); u
ci<-0.01
u<-sqrt(ci)-(1/n)*(ci*n); u
u<-sqrt(cimat)-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u
cimat<-rep(0.01,0.01,0.01,1)
u<-sqrt(cimat)-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u
n<-4
cimat<-rep(0.01,0.01,0.01,1)
u<-sqrt(cimat)-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(0.01,0.01,0.01,1)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(rep((n^2)/4,3),(n^2)/4+1)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-rep((n^2)/4,4)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(rep((n^2)/4+1,4))
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(rep((n^2)/4-1,4))
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-rep((n^2)/4,4)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(0.01,0.01,0.01,1)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(1,1,1,1)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(2,2,2,2)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
(n^2)/4
cimat<-c(4,4,4,4)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(5,4,4,4)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(4.1,4,4,4)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(3.9,4,4,4)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(5,5,5,5)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(6,5,5,5)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(3,3,3,3)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(4,3,3,3)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(4,4,4,4)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(5,4,4,4)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
u3<-sqrt(cimat[3])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u3
u4<-sqrt(cimat[4])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u4
cimat<-c(1,1,0,0)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
n<-2
cimat<-c(1,1,0,0)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
cimat<-c(2,1,0,0)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
cimat<-c(1.1,1,0,0)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
cimat<-c(0.9,1,0,0)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
cimat<-c(0.9,0.9,0,0)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
u2<-sqrt(cimat[2])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u2
n<-1
cimat<-c(0.25,0,0,0)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
cimat<-c(0.5,0,0,0)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
cimat<-c(0.24,0,0,0)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
cimat<-c(0.26,0,0,0)
u1<-sqrt(cimat[1])-(1/n)*(cimat[1]+cimat[2]+cimat[3]+cimat[4]); u1
sqrt(0.25)
57*0.35
42.0/0.527
?rnorm
y <- rnorm(1000,0,5)
M <- matrix(1000,15)
for (i in 1:15){
set.seed(5647+i)
M[,i] <- rnorm(1000,1:i)
}
y
M
?matrix
y <- rnorm(1000,0,5)
M <- matrix(nrow=1000,ncol=15)
for (i in 1:15){
set.seed(5647+i)
M[,i] <- rnorm(1000,1:i)
}
y
M
y <- y-mean(y)
M <- M-matrix(apply(M,2,mean),ncol=ncol(M),nrow=nrow(M),byrow=T)
M <- M/matrix(apply(M,2,sd),ncol=ncol(M),nrow=nrow(M),byrow=T)
beta <- matrix(0,ncol=ncol(M),nrow=1)
r <- y
eps <- 0.001
lots <- 4000
co <- t(M)%*%r
co
cov(M,r)
cov(M,r)*100
cov(M,r)*1000
cov(r,M)
library(plotrix)
library(grid)grid
plot(c(-1, 1), c(-1, 1), type = "n", asp = 1)
rect(-1, -1, 1, 1)
draw.circle(0, 0, 1)
nsamp <- 10000
inside <- NA
for(i in 1:nsamp){
x <- runif(2, -1, 1)
if (sqrt(x[1]*x[1] + x[2] * x[2]) < 1) {
inside[i] <- 1; points(x[1], x[2], col = "orange")
}
if (sqrt(x[1]*x[1] + x[2] * x[2]) > 1) {
inside[i] <- 0; points(x[1], x[2], col = "black")
}
}
install.packages("plotrix")
.libPaths()
install.packages ("RMeCab", repos = "http://rmecab.jp/R")
library(RMeCab)
## Clear Environment
rm(list=ls())
## Prepare Needed Packages
#install.packages ("RMeCab", repos = "http://rmecab.jp/R")
library(rprojroot); library(RMeCab); library(readr)
## Set Working Directory (As the project folder)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)); setwd("../") #In RStudio
projdir <- find_root(has_file("README.md")); projdir; setwd(projdir) #In Atom
#setwd("C:/GoogleDrive/Projects/Political_Headlines/Political_Headlines_Project/codes")
readRDS("../data/allWrdMat10.rds")
